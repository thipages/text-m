const e=["a","em","strong","small","s","cite","q","dfn","abbr","code","var","samp","kbd","sub","sup","i","b","u","mark","span"],t={a:[" ","href","target"],abbr:[,"title"],dfn:[,"title"]},n=/\x01(\d)/g,r=/\|([a-z][a-z0-9]*)(\.([^\[\/]*)){0,1}(\[(.*)\]){0,1}\/([^\/]+)\//gi;
/*! (c) Andrea Giammarchi - ISC */
const s=(()=>{const e="DOMContentLoaded",t=new WeakMap,n=[],r=e=>{do{if(e.nextSibling)return!0}while(e=e.parentNode);return!1},s=()=>{n.splice(0).forEach((e=>{!0!==t.get(e[0])&&(t.set(e[0],!0),e[0][e[1]]())}))};document.addEventListener(e,s);class a extends HTMLElement{static withParsedCallback(a,c="parsed"){const{prototype:i}=a,{connectedCallback:l}=i,o=c+"Callback",u=(t,n,r,s)=>{n.disconnect(),r.removeEventListener(e,s),p(t)},p=e=>{n.length||requestAnimationFrame(s),n.push([e,o])};return Object.defineProperties(i,{connectedCallback:{configurable:!0,writable:!0,value(){if(l&&l.apply(this,arguments),o in this&&!t.has(this)){const n=this,{ownerDocument:s}=n;if(t.set(n,!1),"complete"===s.readyState||r(n))p(n);else{const t=()=>u(n,a,s,t);s.addEventListener(e,t);const a=new MutationObserver((()=>{r(n)&&u(n,a,s,t)}));a.observe(n.parentNode,{childList:!0,subtree:!0})}}}},[c]:{configurable:!0,get(){return!0===t.get(this)}}}),a}}return a.withParsedCallback(a)})(),a={name:"text-m"};!function(e){const{name:t,render:n}=Object.assign(e,a);customElements.define(t,class extends s{constructor(){super()}connectedCallback(){this.innerHTML=n(this.textContent),this.hasAttribute("level-up")&&setTimeout((()=>this.replaceWith(...this.children)))}})}({render:(s,a={wrapElement:"p"})=>{const{wrapElement:c}=a;return function(e,t){const n=e.split("\n\n");return t?n.map((e=>{return`<${n=t}>${e}</${n}>`;var n})).join("\n"):e}(function(e){return e.replace(/^\s*\n*/,"").replace(/\s*\n*$/,"").replace(/^\s*\n/gm,"\n").replace(/\n{3,}/g,"\n\n")}(s.replace("<","&lt;").replace(n,"").replace(/\\\//g,"0").replace(/\\\|/g,"1").replace(r,(function(n,r,s,a,c,i,l){if(e.includes(r)){const e=function(e,n){if(!n)return"";const r=/[a-z-]+="/.test(n);if(r)return n;{const[r,...s]=t[e];if(s){const e=n.trim().replace(/\s{2,}/g," ").split(r);return s.map(((t,n)=>e[n]?`${t}="${e[n]}"`:null)).filter((e=>e)).join(" ")}return""}}(r,i),n=/class\s*="/.test(e)?e:[a?`class="${a}"`:"",e].join(" ").trim();return`<${r}${""===n?"":" "+n}>${l}</${r}>`}return n})).replace(/\x010/g,"&#x2F;").replace(/\x011/g,"&#124;")),c)}});
